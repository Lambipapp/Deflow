#include "translator.h"
#include "canvas.h"
#include "blocks.h"
#include <QDebug>


Translator::Translator()
{
}


void Translator::AddFunctionNameToString(int i, QString &string)
{
    switch(i)
    {
    case 0:
        string = "function init(self)";
        break;
    case 1:
        string = "function update(self, dt)";
        break;
    case 2:
        string = "function on_message(self, message_id, message, sender)";
        break;
    case 3:
        string = "function on_input(self, action_id, action)";
        break;
    case 4:
        string = "function on_reload(self)";
        break;
    case 5:
        string = "function final(self)";
        break;
    }
    string += "\n";
}


QString Translator::TranslateAllGraphSpaces()
{
    QString gsCodeStrings[6];
    QString fileString;


    QList<GraphSpace*> gs = Canvas::instance->GetGraphSpaces();
    //check input connectors, depth first search backwards until all connectors have been searched


    fileString = "--Generated by Deflow--\n";
    for(int i = 0; i < gs.size(); i++)
    {
        AddFunctionNameToString(i, gsCodeStrings[i]);
        TranslateGraphSpace(gs[i], gsCodeStrings[i]);
        fileString += gsCodeStrings[i] + "\n\n";
    }
    return fileString;
}


void Translator::TranslateGraphSpace(GraphSpace* gs, QString &gsCode)
{
    //DFS
    //using a vector for this is slow
    std::vector<ConnectorExecOut*> visited;
    std::vector<ConnectorExecOut*> discovered;


    discovered.push_back(gs->startBlock->myExecOutConnectors[0]);



    ConnectorExecOut* current = nullptr;
    while(discovered.size() > 0)
    {
        current = discovered[discovered.size()-1];
        discovered.pop_back();

        visited.push_back(current);
        //search backwards for all dependencies

        BaseBlock* tmp = current->myBlock;
        gsCode += tmp->getLuaCodeLine() + "\n";


        if(current->next != nullptr)
        {
            BaseBlock* b = current->next->myBlock;
            for(unsigned int i = 0; i < b->myExecOutConnectors.size(); i++)
            {
                discovered.push_back(b->myExecOutConnectors[i]);
            }
        }
    }
    gsCode += QString("\n\nend\n");
    //write to file
}
